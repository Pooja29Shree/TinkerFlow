const python1kn = `
    <h2>ಪಾಠ 1: ಪೈಥಾನ್ ಪರಿಚಯ - ಪೈಥಾನ್ ಸ್ಥಾಪನೆ ಮತ್ತು ಇಂಟರ್ಪ್ರಿಟರ್ ಅನ್ನು ಅರ್ಥಮಾಡಿಕೊಳ್ಳುವುದು</h2><h3>ಪೈಥಾನ್ ಎಂದರೇನು?</h3>
    <p>ಪೈಥಾನ್ ಒಂದು ಕಂಪ್ಯೂಟರ್ ಪ್ರೋಗ್ರಾಮಿಂಗ್ ಭಾಷೆಯಾಗಿದ್ದು, ಇದು ಕಂಪ್ಯೂಟರ್‌ಗಳಿಗೆ ಸೂಚನೆಗಳನ್ನು ನೀಡಲು ನಮಗೆ ಸಹಾಯ ಮಾಡುತ್ತದೆ. ನಿಮ್ಮ ಕಂಪ್ಯೂಟರ್‌ನೊಂದಿಗೆ ಸಂವಹನ ನಡೆಸಲು ಹೊಸ ಭಾಷೆಯನ್ನು ಕಲಿಯುವಂತೆ ಇದನ್ನು ಯೋಚಿಸಿ. ನಾವು ಜನರೊಂದಿಗೆ ಮಾತನಾಡಲು ತಮಿಳು ಅಥವಾ ಇಂಗ್ಲಿಷ್ ಅನ್ನು ಹೇಗೆ ಬಳಸುತ್ತೇವೆಯೋ, ಹಾಗೆಯೇ ಕಂಪ್ಯೂಟರ್‌ಗಳೊಂದಿಗೆ ಮಾತನಾಡಲು ನಾವು ಪೈಥಾನ್ ಅನ್ನು ಬಳಸುತ್ತೇವೆ.</p>

    <h3>ಪೈಥಾನ್ ಏಕೆ ಕಲಿಯಬೇಕು?</h3>
    <ul>
        <li>ಇದನ್ನು ಓದಲು ಮತ್ತು ಬರೆಯಲು ಸುಲಭವಾಗಿದೆ</li>
        <li>ಇದು ಸರಳ ಇಂಗ್ಲಿಷ್ ತರಹದ ಪದಗಳನ್ನು ಬಳಸುತ್ತದೆ</li>
        <li>ಗೂಗಲ್ ಮತ್ತು ಯೂಟ್ಯೂಬ್‌ನಂತಹ ಅನೇಕ ದೊಡ್ಡ ಕಂಪನಿಗಳು ಪೈಥಾನ್ ಅನ್ನು ಬಳಸುತ್ತವೆ</li>
        <li>ನೀವು ಪೈಥಾನ್ ಬಳಸಿ ವೆಬ್‌ಸೈಟ್‌ಗಳು, ಆಟಗಳು ಮತ್ತು ಮೊಬೈಲ್ ಅಪ್ಲಿಕೇಶನ್‌ಗಳನ್ನು ನಿರ್ಮಿಸಬಹುದು</li>
    </ul>

    <h3>ನಿಮ್ಮ ಮೊದಲ ಪೈಥಾನ್ ಪ್ರೋಗ್ರಾಂ</h3>
    <pre><code>print("ಹಲೋ, ವರ್ಲ್ಡ್!")</code></pre>

    <h2>ಪಾಠ 2: ಪೈಥಾನ್‌ನಲ್ಲಿ ಇನ್‌ಪುಟ್ ಮತ್ತು ಔಟ್‌ಪುಟ್</h2>
    <h3>print() ಫಂಕ್ಷನ್</h3>
    <p>ಪರದೆಯ ಮೇಲೆ ಮಾಹಿತಿಯನ್ನು ಪ್ರದರ್ಶಿಸಲು <code>print()</code> ಫಂಕ್ಷನ್ ಅನ್ನು ಬಳಸಲಾಗುತ್ತದೆ.</p>
    <pre><code>print("ಪೈಥಾನ್ ಪ್ರೋಗ್ರಾಮಿಂಗ್‌ಗೆ ಸ್ವಾಗತ")
print("ನನ್ನ ಹೆಸರು ರವಿ")
print(25)
print("ನನ್ನ ವಯಸ್ಸು", 20)</code></pre>

    <h3>input() ಫಂಕ್ಷನ್</h3>
    <p>ಬಳಕೆದಾರರಿಂದ ಮಾಹಿತಿಯನ್ನು ತೆಗೆದುಕೊಳ್ಳಲು <code>input()</code> ಫಂಕ್ಷನ್ ಅನ್ನು ಬಳಸಲಾಗುತ್ತದೆ.</p>
    <pre><code>name = input("ನಿಮ್ಮ ಹೆಸರೇನು? ")
print("ಹಲೋ", name)</code></pre>

    <h2>ಪಾಠ 3: ಪೈಥಾನ್ ವೇರಿಯಬಲ್‌ಗಳು</h2>
    <h3>ವೇರಿಯಬಲ್‌ಗಳು ಎಂದರೇನು?</h3>
    <p>ವೇರಿಯಬಲ್ ಎನ್ನುವುದು ನೀವು ಮಾಹಿತಿಯನ್ನು ಸಂಗ್ರಹಿಸಬಹುದಾದ ಒಂದು ಪೆಟ್ಟಿಗೆಯಂತಿದೆ. ನೀವು ಪೆಟ್ಟಿಗೆಯಲ್ಲಿ ಬೇರೆ ಬೇರೆ ವಸ್ತುಗಳನ್ನು ಇಟ್ಟು ನಂತರ ಅವುಗಳನ್ನು ಬಳಸಬಹುದು. ಪ್ರೋಗ್ರಾಮಿಂಗ್‌ನಲ್ಲಿ, ನಮ್ಮ ಪ್ರೋಗ್ರಾಂನಲ್ಲಿ ನಾವು ಬಳಸಲು ಬಯಸುವ ಡೇಟಾವನ್ನು ಸಂಗ್ರಹಿಸಲು ನಾವು ವೇರಿಯಬಲ್‌ಗಳನ್ನು ಬಳಸುತ್ತೇವೆ.</p>
    <h3>ವೇರಿಯಬಲ್ ನಿಯೋಜನೆ</h3>
    <pre><code>name = "ಕಮಲಾ"
age = 25
height = 5.6
is_student = True</code></pre>

    <h2>ಪಾಠ 4: ಪೈಥಾನ್ ಡೇಟಾ ಪ್ರಕಾರಗಳು</h2>
    <h3>ಡೇಟಾ ಪ್ರಕಾರಗಳು ಎಂದರೇನು?</h3>
    <p>ನಮ್ಮ ವೇರಿಯಬಲ್‌ಗಳಲ್ಲಿ ನಾವು ಯಾವ ರೀತಿಯ ಮಾಹಿತಿಯನ್ನು ಸಂಗ್ರಹಿಸುತ್ತಿದ್ದೇವೆ ಎಂಬುದನ್ನು ಡೇಟಾ ಪ್ರಕಾರಗಳು ನಮಗೆ ತಿಳಿಸುತ್ತವೆ. ನಿಜ ಜೀವನದಲ್ಲಿ, ವಿಭಿನ್ನ ವಸ್ತುಗಳಿಗೆ ವಿಭಿನ್ನ ರೀತಿಯ ಕಂಟೇನರ್‌ಗಳನ್ನು (ನೀರಿಗಾಗಿ ನೀರಿನ ಬಾಟಲ್, ಅಕ್ಕಿಗಾಗಿ ಅಕ್ಕಿ ಚೀಲ) ನಾವು ಹೊಂದಿರುವಂತೆಯೇ, ಪ್ರೋಗ್ರಾಮಿಂಗ್‌ನಲ್ಲಿ ವಿಭಿನ್ನ ರೀತಿಯ ಮಾಹಿತಿಗಾಗಿ ವಿಭಿನ್ನ ಡೇಟಾ ಪ್ರಕಾರಗಳನ್ನು ನಾವು ಹೊಂದಿದ್ದೇವೆ.</p>
    
    <h4>1. ಪೂರ್ಣಾಂಕ (Integer - int)</h4>
    <p>ಪೂರ್ಣಾಂಕಗಳು ದಶಮಾಂಶ ಬಿಂದುಗಳಿಲ್ಲದ ಪೂರ್ಣ ಸಂಖ್ಯೆಗಳಾಗಿವೆ.</p>
    <pre><code>age = 25
year = 2023
temperature = -5</code></pre>

    <h4>2. ಫ್ಲೋಟ್ (Float) - ದಶಮಾಂಶ ಸಂಖ್ಯೆಗಳು</h4>
    <p>ಫ್ಲೋಟ್‌ಗಳು ದಶಮಾಂಶ ಬಿಂದುಗಳನ್ನು ಹೊಂದಿರುವ ಸಂಖ್ಯೆಗಳಾಗಿವೆ.</p>
    <pre><code>height = 5.6
price = 99.99
percentage = 85.75</code></pre>

    <h4>3. ಸ್ಟ್ರಿಂಗ್ (String) - ಪಠ್ಯ ಡೇಟಾ</h4>
    <p>ಪಠ್ಯ ಮಾಹಿತಿಯನ್ನು ಸಂಗ್ರಹಿಸಲು ಸ್ಟ್ರಿಂಗ್‌ಗಳನ್ನು ಬಳಸಲಾಗುತ್ತದೆ. ಅವುಗಳನ್ನು ಉದ್ಧರಣ ಚಿಹ್ನೆಗಳ ಒಳಗೆ ಬರೆಯಲಾಗುತ್ತದೆ.</p>
    <pre><code>name = "ಪ್ರಿಯಾ ಶರ್ಮಾ"
village = "ತಂಜಾವೂರು"
address = "123, ಮುಖ್ಯ ರಸ್ತೆ, ಕೊಯಮತ್ತೂರು"</code></pre>

    <h4>4. ಬೂಲಿಯನ್ (Boolean) - ಸರಿ ಅಥವಾ ತಪ್ಪು</h4>
    <p>ಬೂಲಿಯನ್ ಡೇಟಾ ಪ್ರಕಾರವು ಕೇವಲ ಎರಡು ಮೌಲ್ಯಗಳನ್ನು ಹೊಂದಿದೆ: <code>ಸರಿ</code> (True) ಅಥವಾ <code>ತಪ್ಪು</code> (False). ಇದನ್ನು ಹೌದು/ಇಲ್ಲ, ಆನ್/ಆಫ್ ಮಾದರಿಯ ಮಾಹಿತಿಗಾಗಿ ಬಳಸಲಾಗುತ್ತದೆ.</p>
    <pre><code>is_student = True
is_married = False
has_smartphone = True</code></pre>

    <h3>ಪ್ರಕಾರ ಪರಿವರ್ತನೆ</h3>
    <p>ಕೆಲವೊಮ್ಮೆ ನಾವು ಒಂದು ಡೇಟಾ ಪ್ರಕಾರವನ್ನು ಇನ್ನೊಂದಕ್ಕೆ ಬದಲಾಯಿಸಬೇಕಾಗುತ್ತದೆ.</p>
    <pre><code># ಪೂರ್ಣಾಂಕಕ್ಕೆ ಪರಿವರ್ತಿಸಿ
age_text = "25"
age_number = int(age_text)

# ಸ್ಟ್ರಿಂಗ್‌ಗೆ ಪರಿವರ್ತಿಸಿ
age = 25
age_text = str(age)</code></pre>

    <h3>ಡೇಟಾ ಪ್ರಕಾರವನ್ನು ಕಂಡುಹಿಡಿಯುವುದು</h3>
    <p>ನಿಮ್ಮಲ್ಲಿ ಯಾವ ಪ್ರಕಾರದ ಡೇಟಾ ಇದೆ ಎಂಬುದನ್ನು ಕಂಡುಹಿಡಿಯಲು ನೀವು <code>type()</code> ಫಂಕ್ಷನ್ ಅನ್ನು ಬಳಸಬಹುದು:</p>
    <pre><code>name = "ರವಿ"
age = 25
print(type(name))  # <class 'str'>
print(type(age))   # <class 'int'></code></pre>
`

export default python1kn;
